name: main-workflow
on:
  push: 
    branches:
      - main
  pull_request:
    branches:
      - main
env: 
  docker_username: ${{ github.actor }} 
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{github.sha}}
jobs:
  Build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4    

      - name: Setup go
        uses: actions/setup-go@v4
        #Go can be in version 1.18 up to at least 1.21.

      - name: Build backend
        run: |
          cd backend
          go build
          
      - name: Build frontend
        run: |
          cd frontend
          go build
  
  Testing:
    needs: [Build]
    runs-on: ubuntu-latest 
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v4
    
      - name: Test
        run: |
          cd frontend
          go test frontend -run main_test.go 
          #go run main_test
      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
            name: backend-app
            path: backend/build/backend-app
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-app
          path: frontend/build/frontend-app

  Docker-image:
    runs-on: ubuntu-latest
    needs: [Testing]
    permissions:
      packages: write
    steps:
    - name: Clone down repository
      uses: actions/checkout@v4
    - name: build docker
      run: | 
        cd frontend
        bash ../ci/build-docker-frontend.sh
        cd ../backend
        bash ../ci/build-docker-backend.sh
    - name: push docker
      run: | 
        cd frontend
        bash ../ci/push-docker-frontend.sh
        cd ../backend
        bash ../ci/push-docker-backend.sh
        
  Deploy-to-dev:
    runs-on: ubuntu-latest
    needs: [Docker-image]
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
      - name: Deploy to dev
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          kubectl --kubeconfig kubeconfig apply -f ./container-orchestration/
      - name: clean up dev
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          kubectl --kubeconfig kubeconfig delete -f ./container-orchestration/
      
  Deploy-to-production:
    runs-on: ubuntu-latest
    environment: Production
    needs: [Docker-image, Deploy-to-dev]
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
      - name: Deploy to Production
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          kubectl --kubeconfig kubeconfig apply -f ./container-orchestration/
  Test-Production:
    runs-on: ubuntu:latest
    needs: [Deploy-to-production]
    steps:
      - name: Production test
        run: |
          cd ci
          bash test.sh
  
